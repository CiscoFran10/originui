{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-549",
  "type": "registry:component",
  "files": [
    {
      "path": "registry/default/components/comp-549.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport {\n  AlertCircleIcon,\n  FileArchiveIcon,\n  FileIcon,\n  FileSpreadsheetIcon,\n  FileTextIcon,\n  FileUpIcon,\n  HeadphonesIcon,\n  ImageIcon,\n  VideoIcon,\n  XIcon,\n} from \"lucide-react\"\n\nimport {\n  formatBytes,\n  useFileUpload,\n} from \"@/registry/default/hooks/use-file-upload\"\nimport { Button } from \"@/registry/default/ui/button\"\n\n// Create some dummy initial files\nconst initialFiles = [\n  {\n    name: \"document.pdf\",\n    size: 528737,\n    type: \"application/pdf\",\n    url: \"https://example.com/document.pdf\",\n    id: \"document.pdf-1744638436563-8u5xuls\",\n  },\n  {\n    name: \"intro.zip\",\n    size: 252873,\n    type: \"application/zip\",\n    url: \"https://example.com/intro.zip\",\n    id: \"intro.zip-1744638436563-8u5xuls\",\n  },\n  {\n    name: \"conclusion.xlsx\",\n    size: 352873,\n    type: \"application/xlsx\",\n    url: \"https://example.com/conclusion.xlsx\",\n    id: \"conclusion.xlsx-1744638436563-8u5xuls\",\n  },\n]\n\nconst getFileIcon = (file: { file: File | { type: string; name: string } }) => {\n  const fileType = file.file instanceof File ? file.file.type : file.file.type\n  const fileName = file.file instanceof File ? file.file.name : file.file.name\n\n  if (\n    fileType.includes(\"pdf\") ||\n    fileName.endsWith(\".pdf\") ||\n    fileType.includes(\"word\") ||\n    fileName.endsWith(\".doc\") ||\n    fileName.endsWith(\".docx\")\n  ) {\n    return <FileTextIcon className=\"size-4 opacity-60\" />\n  } else if (\n    fileType.includes(\"zip\") ||\n    fileType.includes(\"archive\") ||\n    fileName.endsWith(\".zip\") ||\n    fileName.endsWith(\".rar\")\n  ) {\n    return <FileArchiveIcon className=\"size-4 opacity-60\" />\n  } else if (\n    fileType.includes(\"excel\") ||\n    fileName.endsWith(\".xls\") ||\n    fileName.endsWith(\".xlsx\")\n  ) {\n    return <FileSpreadsheetIcon className=\"size-4 opacity-60\" />\n  } else if (fileType.includes(\"video/\")) {\n    return <VideoIcon className=\"size-4 opacity-60\" />\n  } else if (fileType.includes(\"audio/\")) {\n    return <HeadphonesIcon className=\"size-4 opacity-60\" />\n  } else if (fileType.startsWith(\"image/\")) {\n    return <ImageIcon className=\"size-4 opacity-60\" />\n  }\n  return <FileIcon className=\"size-4 opacity-60\" />\n}\n\nexport default function Component() {\n  const maxSize = 100 * 1024 * 1024 // 10MB default\n  const maxFiles = 10\n\n  const [\n    { files, isDragging, errors },\n    {\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      openFileDialog,\n      removeFile,\n      clearFiles,\n      getInputProps,\n    },\n  ] = useFileUpload({\n    multiple: true,\n    maxFiles,\n    maxSize,\n    initialFiles,\n  })\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      {/* Drop area */}\n      <div\n        role=\"button\"\n        onClick={openFileDialog}\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        data-dragging={isDragging || undefined}\n        className=\"border-input hover:bg-accent/50 data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 flex min-h-40 flex-col items-center justify-center rounded-xl border border-dashed p-4 transition-colors has-disabled:pointer-events-none has-disabled:opacity-50 has-[input:focus]:ring-[3px]\"\n      >\n        <input\n          {...getInputProps()}\n          className=\"sr-only\"\n          aria-label=\"Upload files\"\n        />\n\n        <div className=\"flex flex-col items-center justify-center text-center\">\n          <div\n            className=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\n            aria-hidden=\"true\"\n          >\n            <FileUpIcon className=\"size-4 opacity-60\" />\n          </div>\n          <p className=\"mb-1.5 text-sm font-medium\">Upload files</p>\n          <p className=\"text-muted-foreground mb-2 text-xs\">\n            Drag & drop or click to browse\n          </p>\n          <div className=\"text-muted-foreground/70 flex flex-wrap justify-center gap-1 text-xs\">\n            <span>All files</span>\n            <span>∙</span>\n            <span>Max {maxFiles} files</span>\n            <span>∙</span>\n            <span>Up to {formatBytes(maxSize)}</span>\n          </div>\n        </div>\n      </div>\n\n      {errors.length > 0 && (\n        <div\n          className=\"text-destructive flex items-center gap-1 text-xs\"\n          role=\"alert\"\n        >\n          <AlertCircleIcon className=\"size-3 shrink-0\" />\n          <span>{errors[0]}</span>\n        </div>\n      )}\n\n      {/* File list */}\n      {files.length > 0 && (\n        <div className=\"space-y-2\">\n          {files.map((file) => (\n            <div\n              key={file.id}\n              className=\"bg-background flex items-center justify-between gap-2 rounded-lg border p-2 pe-3\"\n            >\n              <div className=\"flex items-center gap-3 overflow-hidden\">\n                <div className=\"flex aspect-square size-10 shrink-0 items-center justify-center rounded border\">\n                  {getFileIcon(file)}\n                </div>\n                <div className=\"flex min-w-0 flex-col gap-0.5\">\n                  <p className=\"truncate text-[13px] font-medium\">\n                    {file.file instanceof File\n                      ? file.file.name\n                      : file.file.name}\n                  </p>\n                  <p className=\"text-muted-foreground text-xs\">\n                    {formatBytes(\n                      file.file instanceof File\n                        ? file.file.size\n                        : file.file.size\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                className=\"text-muted-foreground/80 hover:text-foreground -me-2 size-8 hover:bg-transparent\"\n                onClick={() => removeFile(file.id)}\n                aria-label=\"Remove file\"\n              >\n                <XIcon className=\"size-4\" aria-hidden=\"true\" />\n              </Button>\n            </div>\n          ))}\n\n          {/* Remove all files button */}\n          {files.length > 1 && (\n            <div>\n              <Button size=\"sm\" variant=\"outline\" onClick={clearFiles}>\n                Remove all files\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n\n      <p\n        aria-live=\"polite\"\n        role=\"region\"\n        className=\"text-muted-foreground mt-2 text-center text-xs\"\n      >\n        Multiple files uploader w/ list\n      </p>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "upload",
      "file"
    ],
    "colSpan": 2
  }
}